What happens when you initialize a repository? Why do you need to do it?

    When you initialize a repository, Git puts together your files and informs you that your files will not be in a new repository with the path the files are currently in based on where they're stored on your computer.

    This is necessary because otherwise Git would not know what files belong to your repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    The staging area is difference because it is effectively a little limbo land where you can add and make changes before actually submitting the commit itself. This offers you the flexibility to figure out what you want to do before creating the commit itself.

How can you use the staging area to make sure you have one commit per logical change?

    You can use the staging area to make sure you have one commit per logical change by using the git diff command to see what changes were made and ensure that they are substantial enough if not more to warrant a new commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    Branches are helpful in keeping things organized because there are some changes you want to make that you may not think are ready for prime-time or need more work. This allows you to essentially have two versions on your project and work on them in parallel.

How do the diagrams help you visualize the branch structure?

    It helps me remember what is related to what when talking about different topics and subjects. Understanding the link between different topics is a great way to understand concepts.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    The result of merging two branches together is that the code from both branches will be combined into a new commit on one branch. This helps you experiment with one branch and bring it in once its ready.

    The reason it is being represented in the diagram the way it is is because merging operates on the repository. 
